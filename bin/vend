#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

// Error handling / validation
if (!function_exists('pcntl_signal')) {
    die("PCNTL support seems to be missing or disabled. See https://github.com/d11wtq/boris/issues/29 for details\n");
}

if (count($argv) <> 2) {
    echo 'Need to provide an App ID (e.g. Sigma) as CLI argument when running vend' . PHP_EOL;
    exit(0);
}


$appId = $argv[1];
$prompt = 'vend on ' . gethostname() . ' using ' . $appId . ' > ';

$boris = new \Boris\Boris($prompt);

// Constants and VC CLI requirements
$onStartLines = array(
    "error_reporting(E_ALL);",

    'define(\'DOCNET_APP_ID\', \'' . $appId . '\');',
    "require_once('/app/vc-local/custom/admin_html/_shared.php');",
    "require_once('/app/vc-local/custom/config/base-config.php');",
    "require_once('/app/vc-local/custom/config/app_and_db.php');",
);
foreach ($onStartLines as $onStartLine) {
    $boris->onStart($onStartLine);
}


// Convenience methods for customers (3c) and inventory
$boris->onStart(function($worker, $vars){
    $worker->setLocal('c', function($id) { return \DataFactory::get_sprint_3c_searcher()->find_by_id($id); });
    $worker->setLocal('i', function($id) { return \DataFactory::get_inventory_searcher()->find_by_id($id); });
});


// Logic for emulating web-based requirements
$_SERVER['REMOTE_ADDR'] = '127.0.0.1';
$_SERVER['REQUEST_URI'] = '/';
$boris->setLocal('$_SERVER', array(
    'REMOTE_ADDR' => '127.0.0.1',
    'REQUEST_URI' => '/',
));
$boris->onStart(function($worker, $vars){
    $worker->setLocal('$_SERVER', array(
        'REMOTE_ADDR' => '127.0.0.1',
        'REQUEST_URI' => '/',
    ));
});


// Output formatting
$boris->setInspector(new \Vend\VenditanCommerceOutputInspector);


// Bootstrapping Boris REPL CLI library
$config = new \Boris\Config();
$config->apply($boris);

$options = new \Boris\CLIOptionsHandler();
$options->handle($boris);

$boris->start();
